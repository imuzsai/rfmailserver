---
- name: Add an Apt signing key, uses whichever key is at the URL
  apt_key:
    url: https://mariadb.org/mariadb_release_signing_key.asc
    state: present

- name: Install MariaDB repository
  apt_repository: repo='deb [arch=amd64,i386,ppc64el] http://ftp.bme.hu/pub/mirrors/mariadb/repo/10.2/debian stretch main' state=present

- name: install python pip
  apt:
    name: python-pip, python-dev, libmysqlclient-dev

#- name: Install Python MySQLB
#  pip:
#    name: mysql-python

- name: Install Python mysql connector
  apt:
    name: 
      - python-mysqldb

- name: Install MariaDB
  apt:
    name:
      - mariadb-server
      - mariadb-client
    state: present
    update_cache: yes
    cache_valid_time: "{{ aptget_update_cache_valid_time }}"



- name: Remove old 50-server.cnf
  file:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    state: absent

- name: Create Binlog Folder
  file: 
    path: /var/lib/mysql/binlog
    owner: mysql
    group: mysql
    mode: 0755 
    state: directory

- name: Create Relaylog Folder
  file: 
    path: /var/lib/mysql/relaylog
    owner: mysql
    group: mysql
    mode: 0755 
    state: directory

- name: Set mysql configurations
  template:
    src: settings.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/settings.cnf
    owner: root
    group: root
    mode: 0644
  notify: Restart mariadb


- name: Active service
  service:
    name: "{{ mariadb_service_name }}"
    state: started
    enabled: yes

- name: create root mysql user
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mariadb_root_password }}"
    state: present
  with_items:
    - 127.0.0.1
    - ::1
    - localhost
  no_log: false


- name: Copy ~/.my.cnf to root
  template:
    src: my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

- name: create database
  mysql_db:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ mariadb_databases }}"

- name: create additional mysql users
  mysql_user:
    name: "{{ item.value.name }}"
    password: "{{ item.value.password }}"
    priv: "{{ item.value.priv }}"
    state: "{{ item.value.state }}"
    host: "{{ item.value.host }}"
  with_dict: "{{ mariadb_users }}"
  no_log: false
  when: mariadb_users is defined
